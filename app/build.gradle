import java.text.SimpleDateFormat
import groovy.json.JsonOutput
import groovy.json.StringEscapeUtils

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'multi-languages'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"

    defaultConfig {
        ndk {
            abiFilters 'arm64-v8a', 'armeabi-v7a', 'armeabi', 'x86','x86_64'
        }
        applicationId "org.cxct.sportlottery"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 5
        versionName "1.0.188"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }

    signingConfigs {
        release {
            storeFile file("../signKey/key3.jks")
            storePassword "desheng@2020"
            keyAlias "fungame"
            keyPassword "desheng@2020"
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            zipAlignEnabled true
            versionNameSuffix ".debug"
            buildConfigField 'Boolean', 'MOCK', 'false'//使用mock data要設為true
        }

        release {
            minifyEnabled false
            zipAlignEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            buildConfigField 'Boolean', 'MOCK', 'false'//使用mock data要設為true
        }
    }

    lintOptions {
        disable 'MissingTranslation'
        checkReleaseBuilds false
        abortOnError false
    }

    flavorDimensions "single"

    productFlavors {
        fastlane {
            versionName fastlane_version_name
            versionCode Integer.parseInt("${fastlane_version_code}")
            buildConfigField "String", "CHANNEL_NAME", "\"${fastlane_app_code}\""
            applicationId fastlane_application_id
            manifestPlaceholders = [
                    app_name               : fastlane_app_name,
                    JPUSH_PKGNAME          : fastlane_application_id,
                    JPUSH_APPKEY           : fastlane_jpush_appkey, //JPush上注册的包名对应的appkey.
                    JPUSH_CHANNEL          : fastlane_jpush_channel, //暂时填写默认值即可.
                    JPUSH_PRIVODER         : fastlane_jpush_provider,
                    JPUSH_PERMISSION       : fastlane_jpush_permission,
                    NETWORK_SECURITY_CONFIG: fastlane_security_config,
            ]
        }
        forqa {
            buildConfigField "String", "CHANNEL_NAME", "\"spplat1\""
            resValue "string", "app_name", "OkBet"
            applicationId "com.happysport.sl.test"
            buildConfigField "String", "DEFAULT_LANGUAGE", "\"en\""
            buildConfigField "String", "SYSTEM_CURREMCY", "\"PHP\""
            buildConfigField "String", "SYSTEM_CURREMCY_SIGN", "\"₱\""
            manifestPlaceholders = [
                    JPUSH_PKGNAME          : applicationId,
                    JPUSH_APPKEY           : "2efc0f50829574b4db4b1dc8", //JPush上注册的包名对应的appkey.
                    JPUSH_CHANNEL          : "developer-default", //暂时填写默认值即可.
                    NETWORK_SECURITY_CONFIG: "@xml/test_network_security_config"
            ]
        }
        OkbetPH {
            buildConfigField "String", "CHANNEL_NAME", "\"spkx\""
            resValue "string", "app_name", "OkBet"
            applicationId "com.okbet.ph"
            buildConfigField "String", "DEFAULT_LANGUAGE", "\"en\""
            buildConfigField "String", "SYSTEM_CURREMCY", "\"PHP\""
            buildConfigField "String", "SYSTEM_CURREMCY_SIGN", "\"₱\""
            manifestPlaceholders = [
                    JPUSH_PKGNAME          : applicationId,
                    JPUSH_APPKEY           : "6ce6dade62a7563b526bf021", //JPush上注册的包名对应的appkey.
                    JPUSH_CHANNEL          : "developer-default", //暂时填写默认值即可.
                    NETWORK_SECURITY_CONFIG: "@xml/test_network_security_config"
            ]
        }
        WinbetCN {
            buildConfigField "String", "CHANNEL_NAME", "\"spwb\""
            resValue "string", "app_name", "WINBET"
            applicationId "com.wbettyap.cnapp"
            buildConfigField "String", "DEFAULT_LANGUAGE", "\"zh\""
            buildConfigField "String", "SYSTEM_CURREMCY", "\"RMB\""
            buildConfigField "String", "SYSTEM_CURREMCY_SIGN", "\"¥\""
            manifestPlaceholders = [
                    JPUSH_PKGNAME          : applicationId,
                    JPUSH_APPKEY           : "e153d5d381f1db5b7b0ed0d4", //JPush上注册的包名对应的appkey.
                    JPUSH_CHANNEL          : "developer-default", //暂时填写默认值即可.
                    NETWORK_SECURITY_CONFIG: "@xml/test_network_security_config"
            ]
        }
        spnew1{
            buildConfigField "String", "CHANNEL_NAME", "\"spnew1\""
            resValue "string", "app_name", "OkBet"
            applicationId "com.okbet.spnew1"
            buildConfigField "String", "DEFAULT_LANGUAGE", "\"zh\""
            buildConfigField "String", "SYSTEM_CURREMCY", "\"RMB\""
            buildConfigField "String", "SYSTEM_CURREMCY_SIGN", "\"¥\""
            manifestPlaceholders = [
                    JPUSH_PKGNAME          : applicationId,
                    JPUSH_APPKEY           : "e153d5d381f1db5b7b0ed0d4", //JPush上注册的包名对应的appkey.
                    JPUSH_CHANNEL          : "developer-default", //暂时填写默认值即可.
                    NETWORK_SECURITY_CONFIG: "@xml/test_network_security_config"
            ]
        }
        credit {
            buildConfigField "String", "CHANNEL_NAME", "\"cdplat1\""
            resValue "string", "app_name", "OkBet"
            applicationId "com.okbet.cdplat1"
            buildConfigField "String", "DEFAULT_LANGUAGE", "\"en\""
            buildConfigField "String", "SYSTEM_CURREMCY", "\"PHP\""
            buildConfigField "String", "SYSTEM_CURREMCY_SIGN", "\"₱\""
            manifestPlaceholders = [
                    JPUSH_PKGNAME          : applicationId,
                    JPUSH_APPKEY           : "0ef3e0b1b397bd252f23b2ac", //JPush上注册的包名对应的appkey.
                    JPUSH_CHANNEL          : "developer-default", //暂时填写默认值即可.
                    NETWORK_SECURITY_CONFIG: "@xml/test_network_security_config"
            ]
        }
        spcd {
            buildConfigField "String", "CHANNEL_NAME", "\"spcd\""
            resValue "string", "app_name", "OkBet"
            applicationId "com.okbet.spcd"
            buildConfigField "String", "DEFAULT_LANGUAGE", "\"en\""
            buildConfigField "String", "SYSTEM_CURREMCY", "\"PHP\""
            buildConfigField "String", "SYSTEM_CURREMCY_SIGN", "\"₱\""
            manifestPlaceholders = [
                    JPUSH_PKGNAME          : applicationId,
                    JPUSH_APPKEY           : "0cf211236261e69cc4bf682e", //JPush上注册的包名对应的appkey.
                    JPUSH_CHANNEL          : "developer-default", //暂时填写默认值即可.
                    NETWORK_SECURITY_CONFIG: "@xml/test_network_security_config"
            ]
        }
    }

    sourceSets {
        fastlane.res.srcDirs = ["${fastlane_res_src_dir}"]
        forqa.res.srcDirs = ['src/okbet_ph/res']
        OkbetPH.res.srcDirs = ['src/okbet_ph/res']
        WinbetCN.res.srcDirs = ['src/winbet_cn/res']
        spnew1.res.srcDirs = ['src/okbet_ph/res']
        credit.res.srcDirs = ['src/okbet_ph/res']
        main {
            jniLibs.srcDirs = ['src/main/libs']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }

    // release apk時，不將.mock包入apk
    applicationVariants.all { variant ->
        if (variant.buildType.name == 'release') {
            variant.mergeAssetsProvider.configure {
                doLast {
                    delete(fileTree(dir: outputDir, includes: ['**/*.mock']))
                }
            }
        }
    }

    //rename release .apk file
    applicationVariants.all { variant ->
        //判斷只有 release 版本才處理以下任務
        if (variant.buildType.name == 'release') {
            //改輸出名稱
            variant.outputs.all { output ->
                def name = fastlane_app_code == "" ? variant.flavorName : fastlane_app_code
                def date = new SimpleDateFormat("yyyyMMdd").format(new Date())
                //outputFileName = name + '_' + getVersionCode() + '_' + getVersionName() + '_' + date + '.apk'
                outputFileName = name + '_' + getVersionName() + '_' + date + '.apk'
            }

            //強制改寫 apk 輸出路徑, ex: ..\app\build/outputs/releaseAPK
            //方便不同平台的 apk 可以在同一層級的資料夾整理
//            variant.getPackageApplication().outputDirectory = new File(project.buildDir.absolutePath + "/outputs/releaseAPK")
        }
    }

    variantFilter { variant ->
        //如果不是從 fastlane 執行的，會接到預設值 gradle 裡 (gradle.properties)
        if (fastlane_executor != 'fastlane') {
            def names = variant.flavors*.name
            if (names.contains("fastlane")) {
                setIgnore(true)
            }
        }
    }
}

ext {
    version_retrofit = "2.9.0"
    version_room = "2.4.0-alpha03"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.dynamicanimation:dynamicanimation-ktx:1.0.0-alpha03'
    implementation 'androidx.webkit:webkit:1.4.0'

    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.drawerlayout:drawerlayout:1.1.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'androidx.preference:preference:1.1.1'

    //Activity Results API
    implementation 'androidx.activity:activity-ktx:1.2.0-rc01'
    implementation 'androidx.fragment:fragment-ktx:1.3.0-rc01'

    //伸縮抽屜layout https://github.com/cachapa/ExpandableLayout
    implementation 'net.cachapa.expandablelayout:expandablelayout:2.9.2'

    //導圓角的 ImageView
    implementation 'com.makeramen:roundedimageview:2.3.0'

    //Moshi
    implementation "com.squareup.moshi:moshi-kotlin:1.11.0"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$version_retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$version_retrofit"
    implementation "com.squareup.okhttp3:okhttp:4.7.2"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.1.1'

    //ViewModel
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'

    //navigation
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.2'

    //multiLanguages //https://github.com/MichaelJokAr/MultiLanguages
    implementation "com.github.jokar:multi-languages:0.1.4"

    //live data
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'

    //annotation
    implementation 'androidx.annotation:annotation:1.1.0'

    //koin
    implementation "org.koin:koin-core:$koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"
    implementation "org.koin:koin-android:$koin_version"

    //timber
    implementation 'com.jakewharton.timber:timber:5.0.1'

    //calendar of date range picker
    implementation project(':awesome-calendar')

    //glide 處理圖片加載(支援.gif檔)
    implementation 'com.github.bumptech.glide:glide:4.11.0'

    //WebSocket
    implementation project(':stomp_protocol_android')

    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.github.bumptech.glide:glide:4.11.0'

    //相片選擇、拍照、錄影、剪裁 https://github.com/LuckSiege/PictureSelector
    implementation 'com.github.LuckSiege.PictureSelector:picture_library:v2.6.0'

    //動態權限請求 https://github.com/tbruyelle/RxPermissions
    implementation 'com.github.tbruyelle:rxpermissions:0.11'

    //圖片輪播功能 https://github.com/xiaohaibin/XBanner
    implementation 'com.xhb:xbanner:1.4.1'
    //androidX 版本使用下面的依赖
    implementation 'com.github.xiaohaibin:XBanner:androidx_v1.1.3'
    implementation 'io.github.youth5201314:banner:2.2.2'


    //極光推送sdk
    implementation 'cn.jiguang.sdk:jpush-google:4.6.6'
    implementation 'cn.jiguang.sdk:jcore-google:3.2.4'
    //implementation 'cn.jiguang.sdk:janalytics:2.1.4'

    //room
    implementation "androidx.room:room-runtime:$version_room"
    implementation "androidx.room:room-ktx:$version_room"
    kapt "androidx.room:room-compiler:$version_room"

    //NodeMediaClient
    implementation 'com.github.NodeMedia:NodeMediaClient-Android:2.9.16'

    //ExoPlayer
    implementation 'com.google.android.exoplayer:exoplayer-core:2.15.1'
    implementation 'com.google.android.exoplayer:exoplayer-ui:2.15.1'
    implementation 'com.google.android.exoplayer:exoplayer-hls:2.15.1'
    implementation 'com.google.android.exoplayer:extension-okhttp:2.15.1'
    implementation 'com.google.android.exoplayer:extension-rtmp:2.15.1'

    //下拉刷新，上拉加載 元件 (豎屏、橫屏) https://github.com/scwang90/SmartRefreshLayout
    implementation 'com.scwang.smart:refresh-layout-kernel:2.0.3'

    //DateTimePicker
    implementation 'com.contrarywind:Android-PickerView:4.1.9'

    //SVG rendering library
    implementation 'com.caverock:androidsvg-aar:1.4'
    //簡易封裝的Adapter
    implementation 'com.zhy:base-rvadapter:3.0.3'

    //CircleIndicator
    implementation 'me.relex:circleindicator:2.1.6'

    //LoopingSnapHelper
    implementation 'com.github.beksomega:loopinglayout:0.4.1'

    //實名認證影像辨識套件
    implementation 'com.zoloz.android.build:zolozkit:1.2.1'
    implementation "com.squareup.okio:okio:1.7.0@jar"
    implementation "com.alibaba:fastjson:1.1.68.android"

    implementation 'com.github.JessYanCoding:AndroidAutoSize:v1.2.1'
    implementation 'org.parceler:parceler-api:1.1.12'
    implementation 'com.airbnb.android:lottie:5.0.3'

    implementation 'com.facebook.shimmer:shimmer:0.5.0'

}

repositories {
    mavenCentral()
}

multiLanguages {
    enable = true
}

task syncConfigJson {
    doLast {
        Map<String, String> jsonObject = [:]
//['dictionary_version': android.defaultConfig.versionName, 'short_version': android.defaultConfig.versionCode]
        jsonObject['dictionary_version'] = android.defaultConfig.versionName
        jsonObject['short_version'] = android.defaultConfig.versionCode
        jsonObject['platform'] = []

        Map<String, String> nameMapping = ["forqa": "spplat1"]

        android.productFlavors.all { flavor ->
            if (flavor.name != 'fastlane') {
                Map<String, String> appObject = [:]
                appObject['app_code'] = nameMapping.containsKey(flavor.name) ? nameMapping[flavor.name] : flavor.name
                appObject['appid'] = flavor.applicationId
                appObject['app_name'] = flavor.resValues.app_name.value
                appObject['jpush_appKey'] = flavor.manifestPlaceholders['JPUSH_APPKEY']

                jsonObject['platform'].add(appObject)
            }
        }

        def json = JsonOutput.toJson(jsonObject)
        // pretty format
        json = JsonOutput.prettyPrint(json)
        // remove unicode string escape sequences
        json = StringEscapeUtils.unescapeJavaScript(json)
        println "json:\n" + json

        File file = new File("./fastlane/config.json")
        file.write(json)
    }
}